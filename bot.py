from datetime import datetime, date, time
from decouple import config
from threading import Thread
import telebot
from telebot import types
import time as timer

# –≤ 2:00 –ø–æ –ú–°–ö (–≤ 0:00 –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ï–≤—Ä–æ–ø—ã (GMT+1)) –ø—Ä–∏—Å—ã–ª–∞—é—Ç—Å—è –ø–∏—Å—å–º–∞ –æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
TOKEN = config('token', default='')
bot = telebot.TeleBot(TOKEN)

time_of_msg = time(0, 10)  # 00:10:00 –ø–æ –ú–°–ö, –≤—Ä–µ–º—è, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è

birthdays_and_names = {'01.06': ["–ò—Ç—Ç–æ", "–ü–∞–π–º–æ–Ω"], '24.07': ["–°–∏–∫–∞–Ω–æ–∏–Ω –•—ç–π–¥–∑–æ"], '15.08': ["–ö–æ–ª–ª–µ–∏"]}


@bot.message_handler(commands=['start', 'go'])
def start_handler(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_hello = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn_closest_bday = types.KeyboardButton("‚ùì –ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è")
    btn_bdays_that_month = types.KeyboardButton("üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ")
    btn_bdays_selected_month = types.KeyboardButton("üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ")
    markup.add(btn_hello, btn_closest_bday, btn_bdays_that_month, btn_bdays_selected_month)

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –∫–æ–≥–¥–∞ —è –≤—ã—Ä–∞—Å—Ç—É, —è –±—É–¥—É —Å–æ–æ–±—â–∞—Ç—å –ø—Ä–æ –î–† –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≥–µ–Ω—à–∏–Ω–∞',
                     reply_markup=markup)
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFj6Zi-UrjcS6F5m3hXB44mFi_KPDn2wACdw0AAnDa8UsVqatk3kgIuSkE')


@bot.message_handler(commands=['help'])
def help_handler(message):
    bot.send_message(message.chat.id, "–í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ https://t.me/birthdaysGenshin "
                                      "—è –±—É–¥—É —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø—Ä–æ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è "
                                      "–ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π Genshin Impact. –ü–µ—Ä–µ—Ö–æ–¥–∏ —Ç—É–¥–∞!")


@bot.message_handler(content_types=['text'])
# –ø–æ—Ç–æ–º, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —Ä–∞—Å–ø–∏—Ö–∞—é –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ö—ç–Ω–¥–ª–µ—Ä–∞–º –∏ —Å–æ–∑–¥–∞–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö —ç—Ç–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
# –∞ –º–± –∑–∞–º–µ–Ω—é –ø–æ—Ç–æ–º –Ω–∞ inline –∫–Ω–æ–ø–∫–∏, —Ö–æ—Ç—è –±—ã —á–∞—Å—Ç—å –∏–∑ –Ω–∏—Ö
def get_text_messages(message):
    if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFj9pi-XwJ6DuPzfFzrNhgFAo74cNd6gACPw8AAnqS-EtUlG9v__OqzSkE')
    elif message.text == "‚ùì –ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è":
        bot.send_message(message.chat.id, '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ‚öôÔ∏è')
    elif message.text == "üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ":
        bot.send_message(message.chat.id, '‚öô –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ‚öôÔ∏è')
    elif message.text == "üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_jan = types.KeyboardButton("–Ø–Ω–≤–∞—Ä—å")
        btn_feb = types.KeyboardButton("–§–µ–≤—Ä–∞–ª—å")
        btn_mar = types.KeyboardButton("–ú–∞—Ä—Ç")
        btn_apr = types.KeyboardButton("–ê–ø—Ä–µ–ª—å")
        btn_may = types.KeyboardButton("–ú–∞–π")
        btn_jun = types.KeyboardButton("–ò—é–Ω—å")
        btn_jul = types.KeyboardButton("–ò—é–ª—å")
        btn_aug = types.KeyboardButton("–ê–≤–≥—É—Å—Ç")
        btn_sep = types.KeyboardButton("–°–µ–Ω—Ç—è–±—Ä—å")
        btn_oct = types.KeyboardButton("–û–∫—Ç—è–±—Ä—å")
        btn_nov = types.KeyboardButton("–ù–æ—è–±—Ä—å")
        btn_dec = types.KeyboardButton("–î–µ–∫–∞–±—Ä—å")
        btn_back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn_jan, btn_feb, btn_mar, btn_apr, btn_may, btn_jun, btn_jul, btn_aug, btn_sep,
                   btn_oct, btn_nov, btn_dec, btn_back)
        bot.send_message(message.chat.id, text="–ö–∞–∫–æ–π –º–µ—Å—è—Ü –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
    elif message.text == "–Ø–Ω–≤–∞—Ä—å" or message.text == "–§–µ–≤—Ä–∞–ª—å" or message.text == "–ú–∞—Ä—Ç" or message.text == "–ê–ø—Ä–µ–ª—å"\
            or message.text == "–ú–∞–π" or message.text == "–ò—é–Ω—å" or message.text == "–ò—é–ª—å" or message.text == "–ê–≤–≥—É—Å—Ç"\
            or message.text == "–°–µ–Ω—Ç—è–±—Ä—å" or message.text == "–û–∫—Ç—è–±—Ä—å" or message.text == "–ù–æ—è–±—Ä—å"\
            or message.text == "–î–µ–∫–∞–±—Ä—å":
        bot.send_message(message.chat.id, '–î–∞, —ç—Ç–æ —Ç–æ–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ‚öôÔ∏è')
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_hello = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        btn_closest_bday = types.KeyboardButton("‚ùì –ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è")
        btn_bdays_that_month = types.KeyboardButton("üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ")
        btn_bdays_selected_month = types.KeyboardButton("üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ")
        markup.add(btn_hello, btn_closest_bday, btn_bdays_that_month, btn_bdays_selected_month)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)

    else:
        bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help")


def send_birthday_msg(name):
    bot.send_message("@birthdaysGenshin", "{name} —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!".format(name=name))
    # –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –ø–∞–∫ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–¥–æ –∑–∞–º–µ–Ω–∏—Ç—å send_message –Ω–∞ send_photo
    # bot.send_photo("@birthdaysGenshin", photo, caption='–∂–µ–ª–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç')


def check_time():
    """
    –ú–µ—Ç–æ–¥ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π.
    –ö–æ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –¥–∞—Ç–µ, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è.
    –ï—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ —Å–µ–≥–æ–¥–Ω—è –æ–Ω –µ—â–µ –Ω–µ –ø—É–±–ª–∏–∫–æ–≤–∞–ª –Ω–∏—á–µ–≥–æ,
    —Ç–æ–≥–¥–∞ –º–µ—Ç–æ–¥ –ø—É–±–ª–∏–∫—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ –∏ –¥–µ–ª–∞–µ—Ç –æ—Ç–º–µ—Ç–∫—É, —á—Ç–æ –æ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞–ª.
    –û—Ç–º–µ—Ç–∫–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
    """
    saved_date = ''
    is_msg_sent = False
    while True:
        today = date.today().strftime("%d.%m")
        if saved_date != today:
            saved_date = today
            is_msg_sent = False

        for birthday in birthdays_and_names.keys():
            if birthday == today:
                time_now = datetime.now().time()
                if time_now >= time_of_msg and not is_msg_sent:
                    names = birthdays_and_names[birthday]
                    for name in names:
                        send_birthday_msg(name)
                        timer.sleep(15)
                    is_msg_sent = True
        timer.sleep(600)  # —Å–æ–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç


thread_time = Thread(target=check_time)  # –ø–æ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
thread_time.start()

bot.polling(none_stop=True, interval=0)  # –ø–æ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –±–æ—Ç—É –≤ –ª–∏—á–∫—É
