from datetime import datetime, date, time
from decouple import config
from threading import Thread
import telebot
from telebot import types
import time as timer
import pymorphy2

morph = pymorphy2.MorphAnalyzer()

# –≤ 2:00 –ø–æ –ú–°–ö (–≤ 0:00 –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ï–≤—Ä–æ–ø—ã (GMT+1)) –ø—Ä–∏—Å—ã–ª–∞—é—Ç—Å—è –ø–∏—Å—å–º–∞ –æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
TOKEN = config('token', default='')
bot = telebot.TeleBot(TOKEN, parse_mode='HTML')

time_of_msg = time(23, 10)  # 23:10:00 –ø–æ –ú–°–ö, –≤—Ä–µ–º—è, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è

birthdays_and_names = {'09.01': ["–¢–æ–º–∞"],
                       '14.02': ["–ë—ç–π –î–æ—É"],
                       '03.03': ["–¶–∏ –¶–∏"],
                       '04.04': ["–≠–ª–æ–π"],
                       '21.05': ["–Æ–Ω—å –¶–∑–∏–Ω—å"],
                       '01.06': ["–ò—Ç—Ç–æ", "–ü–∞–π–º–æ–Ω"],
                       '09.06': ["–õ–∏–∑–∞"],
                       '14.07': ["–ö—É–¥–∑—ë –°–∞—Ä–∞"],
                       '24.07': ["–°–∏–∫–∞–Ω–æ–∏–Ω –•—ç–π–¥–∑–æ"],
                       '15.08': ["–ö–æ–ª–ª–µ–∏", "–¢–∏–≥–Ω–∞—Ä–∏"],
                       '26.08': ["–ù–∏–Ω –ì—É–∞–Ω"],
                       '09.09': ["–†—ç–π–∑–æ—Ä"],
                       '25.10': ["–≠–æ–ª–∞"],
                       '30.11': ["–ö—ç–π–∞"],
                       '02.12': ["–ì–∞–Ω—å –Æ–π"]}

text_for_btn_hello = "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"
text_for_btn_closest_bday = "‚ùì –ë–ª–∏–∂–∞–π—à–∏–π –î–†"
text_for_btn_that_month_bdays = "üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ"
text_for_btn_selected_month_bdays = "üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ"
text_for_btn_bday_closest_to_my_bday = "ü§î –£–∑–Ω–∞—Ç—å, —á–µ–π –î–† –±–ª–∏–∂–µ –≤—Å–µ–≥–æ –∫ –º–æ–µ–º—É"
text_for_btn_find_bday_of_char = "üîç –£–∑–Ω–∞—Ç—å –î–† –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"


@bot.message_handler(commands=['start', 'go'])
def start_handler(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –∫–æ–≥–¥–∞ —è –≤—ã—Ä–∞—Å—Ç—É, —è –±—É–¥—É —Å–æ–æ–±—â–∞—Ç—å –ø—Ä–æ –î–† –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≥–µ–Ω—à–∏–Ω–∞',
                     reply_markup=main_menu())
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFj6Zi-UrjcS6F5m3hXB44mFi_KPDn2wACdw0AAnDa8UsVqatk3kgIuSkE')


@bot.message_handler(commands=['help', 'about'])
def about_handler(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å, —á–µ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Å–∫–æ—Ä–æ –Ω–∞—Å—Ç—É–ø–∏—Ç, "
                                      "—É –∫–æ–≥–æ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º (–∏–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–æ–±–æ–π) –º–µ—Å—è—Ü–µ. "
                                      "–î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–æ –ª–∏—à—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É!\n\n"
                                      "–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ https://t.me/birthdaysGenshin "
                                      "—è –±—É–¥—É —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø—Ä–æ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è "
                                      "–ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π Genshin Impact. –ü–µ—Ä–µ—Ö–æ–¥–∏ —Ç—É–¥–∞!")


@bot.message_handler(commands=['hello'])
def hello_handler(message):
    send_hello_msg(message)


@bot.message_handler(commands=['closestbday'])
def closest_bday_handler(message):
    send_closest_bday(message)


@bot.message_handler(commands=['bdaysthatmonth'])
def bdays_that_month_handler(message):
    send_that_month_bdays(message)


@bot.message_handler(commands=['bdaysselectedmonth'])
def bdays_selected_month_handler(message):
    send_month_menu(message)


@bot.message_handler(commands=['bdayclosesttomybday'])
def bdays_closest_to_my_bday_handler(message):
    send_bday_closest_to_my_bday(message)


@bot.message_handler(commands=['findbdayofchar'])
def find_bday_of_char_handler(message):
    send_bday_of_char(message)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    try:
        if call.data == "jan":
            send_bdays_of_selected_month(call, "–Ø–Ω–≤–∞—Ä—å")
        elif call.data == "feb":
            send_bdays_of_selected_month(call, "–§–µ–≤—Ä–∞–ª—å")
        elif call.data == "mar":
            send_bdays_of_selected_month(call, "–ú–∞—Ä—Ç")
        elif call.data == "apr":
            send_bdays_of_selected_month(call, "–ê–ø—Ä–µ–ª—å")
        elif call.data == "may":
            send_bdays_of_selected_month(call, "–ú–∞–π")
        elif call.data == "jun":
            send_bdays_of_selected_month(call, "–ò—é–Ω—å")
        elif call.data == "jul":
            send_bdays_of_selected_month(call, "–ò—é–ª—å")
        elif call.data == "aug":
            send_bdays_of_selected_month(call, "–ê–≤–≥—É—Å—Ç")
        elif call.data == "sep":
            send_bdays_of_selected_month(call, "–°–µ–Ω—Ç—è–±—Ä—å")
        elif call.data == "oct":
            send_bdays_of_selected_month(call, "–û–∫—Ç—è–±—Ä—å")
        elif call.data == "nov":
            send_bdays_of_selected_month(call, "–ù–æ—è–±—Ä—å")
        elif call.data == "dec":
            send_bdays_of_selected_month(call, "–î–µ–∫–∞–±—Ä—å")
    except telebot.apihelper.ApiTelegramException:
        # –µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ 2 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥ –Ω–∞–∂–º–µ—Ç –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∫–Ω–æ–ø–∫—É, –±–æ—Ç –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –≤–æ—Ç –∏ –ª–æ–≤–∏–º –µ–≥–æ
        bot.answer_callback_query(call.id, "–ù–µ –Ω–∞–∂–∏–º–∞–π –¥–≤–∞–∂–¥—ã –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∫–Ω–æ–ø–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞")
        pass


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == text_for_btn_hello or message.text.lower() == "hello" or message.text.lower() == "–ø—Ä–∏–≤–µ—Ç":
        send_hello_msg(message)
    elif message.text == text_for_btn_closest_bday:
        send_closest_bday(message)
    elif message.text == text_for_btn_that_month_bdays:
        send_that_month_bdays(message)
    elif message.text == text_for_btn_selected_month_bdays:
        send_month_menu(message)
    elif message.text == text_for_btn_bday_closest_to_my_bday:
        send_bday_closest_to_my_bday(message)
    elif message.text == text_for_btn_find_bday_of_char:
        send_bday_of_char(message)
    else:
        bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help –∏–ª–∏ /about")


def send_birthday_msg(name):
    bot.send_message("@birthdaysGenshin",
                     "<b>{name}</b> —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!".format(name=name))
    # –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –ø–∞–∫ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–¥–æ –∑–∞–º–µ–Ω–∏—Ç—å send_message –Ω–∞ send_photo
    # bot.send_photo("@birthdaysGenshin", photo, caption='–∂–µ–ª–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç')


def send_hello_msg(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFj9pi-XwJ6DuPzfFzrNhgFAo74cNd6gACPw8AAnqS-EtUlG9v__OqzSkE')


def send_closest_bday(message):
    bot.send_message(message.chat.id, '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ‚öôÔ∏è')


def send_that_month_bdays(message):
    current_month = str(date.today())[5:7]
    names_of_chars = "–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ:\n\n"
    for key in birthdays_and_names.keys():
        month = key[3:]
        if current_month == month:
            names = birthdays_and_names[key]
            names_one_day = ""
            for name in names:
                if len(names) > 1:
                    names_one_day += name + ", "
            if names_one_day == "":
                names_of_chars += "{bday}: {name}\n".format(bday=key, name=names[0])
            else:
                names_one_day = names_one_day[:-2]
                names_of_chars += "{bday}: {name}\n".format(bday=key, name=names_one_day)
    bot.send_message(message.chat.id, names_of_chars)


def send_month_menu(message):
    bot.send_message(message.chat.id, text="–ö–∞–∫–æ–π –º–µ—Å—è—Ü –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=month_menu())


def send_bday_closest_to_my_bday(message):
    bot.send_message(message.chat.id, '‚öô –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—á–µ–Ω—å –Ω–µ—Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞ üò¢Ô∏è')


def send_bday_of_char(message):
    # –¥–ª—è —ç—Ç–æ–π —Ñ–∏—á–∏ –Ω–∞–¥–æ —Ç–æ–∂–µ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å–¥–µ–ª–∞—Ç—å (–∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—É–¥—É—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è)
    bot.send_message(message.chat.id, '–Ø –±—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é —Ä–∞—Å—Å–∫–∞–∑–∞–ª, –Ω–æ –ø–æ–∫–∞ –Ω–µ —É–º–µ—é üò¢Ô∏è')


def send_bdays_of_selected_month(call, month):
    # –ø—Ä–∏–¥—É–º–∞—Ç—å, –∫–∞–∫ –ø–µ—Ä–µ–≥–æ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –º–µ—Å—è—Ü–∞ –≤ —á–∏—Å–ª–æ–≤–æ–π ("—è–Ω–≤–∞—Ä—å" -> "01"). –ú–± —Å –ø–æ–º–æ—â—å—é —Å–ª–æ–≤–∞—Ä—è
    month = morph.parse(month)[0]
    month_loct = month.inflect({'loct'})
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text="–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ {month}".format(month=month_loct.word),
                          reply_markup=month_menu())


def main_menu():
    main_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    main_keyboard.row_width = 2
    btn_hello = types.KeyboardButton(text_for_btn_hello)
    btn_closest_bday = types.KeyboardButton(text_for_btn_closest_bday)
    btn_bdays_that_month = types.KeyboardButton(text_for_btn_that_month_bdays)
    btn_bdays_selected_month = types.KeyboardButton(text_for_btn_selected_month_bdays)
    btn_bday_closest_to_my_bday = types.KeyboardButton(text_for_btn_bday_closest_to_my_bday)
    btn_find_bday_of_char = types.KeyboardButton(text_for_btn_find_bday_of_char)
    main_keyboard.add(btn_hello, btn_closest_bday, btn_bdays_that_month, btn_bdays_selected_month,
                      btn_bday_closest_to_my_bday, btn_find_bday_of_char)
    return main_keyboard


def month_menu():
    month_keyboard = types.InlineKeyboardMarkup()
    month_keyboard.row_width = 3
    btn_jan = types.InlineKeyboardButton("–Ø–Ω–≤–∞—Ä—å", callback_data="jan")
    btn_feb = types.InlineKeyboardButton("–§–µ–≤—Ä–∞–ª—å", callback_data="feb")
    btn_mar = types.InlineKeyboardButton("–ú–∞—Ä—Ç", callback_data="mar")
    btn_apr = types.InlineKeyboardButton("–ê–ø—Ä–µ–ª—å", callback_data="apr")
    btn_may = types.InlineKeyboardButton("–ú–∞–π", callback_data="may")
    btn_jun = types.InlineKeyboardButton("–ò—é–Ω—å", callback_data="jun")
    btn_jul = types.InlineKeyboardButton("–ò—é–ª—å", callback_data="jul")
    btn_aug = types.InlineKeyboardButton("–ê–≤–≥—É—Å—Ç", callback_data="aug")
    btn_sep = types.InlineKeyboardButton("–°–µ–Ω—Ç—è–±—Ä—å", callback_data="sep")
    btn_oct = types.InlineKeyboardButton("–û–∫—Ç—è–±—Ä—å", callback_data="oct")
    btn_nov = types.InlineKeyboardButton("–ù–æ—è–±—Ä—å", callback_data="nov")
    btn_dec = types.InlineKeyboardButton("–î–µ–∫–∞–±—Ä—å", callback_data="dec")
    month_keyboard.add(btn_jan, btn_feb, btn_mar, btn_apr, btn_may, btn_jun, btn_jul, btn_aug, btn_sep,
                       btn_oct, btn_nov, btn_dec)
    return month_keyboard


def check_time():
    """
    –ú–µ—Ç–æ–¥ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π.
    –ö–æ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –¥–∞—Ç–µ, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è.
    –ï—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ —Å–µ–≥–æ–¥–Ω—è –æ–Ω –µ—â–µ –Ω–µ –ø—É–±–ª–∏–∫–æ–≤–∞–ª –Ω–∏—á–µ–≥–æ,
    —Ç–æ–≥–¥–∞ –º–µ—Ç–æ–¥ –ø—É–±–ª–∏–∫—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ –∏ –¥–µ–ª–∞–µ—Ç –æ—Ç–º–µ—Ç–∫—É, —á—Ç–æ –æ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞–ª.
    –û—Ç–º–µ—Ç–∫–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
    """
    saved_date = ''
    is_msg_sent = False
    while True:
        today = date.today().strftime("%d.%m")
        if saved_date != today:
            saved_date = today
            is_msg_sent = False

        for birthday in birthdays_and_names.keys():
            if birthday == today:
                time_now = datetime.now().time()
                if time_now >= time_of_msg and not is_msg_sent:
                    names = birthdays_and_names[birthday]
                    for name in names:
                        send_birthday_msg(name)
                        timer.sleep(15)
                    is_msg_sent = True
        timer.sleep(600)  # —Å–æ–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç


thread_time = Thread(target=check_time)  # –ø–æ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
thread_time.start()

bot.polling(none_stop=True, interval=0)  # –ø–æ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –±–æ—Ç—É –≤ –ª–∏—á–∫—É
