from datetime import datetime, date, time
from decouple import config
import telebot
import time as timer
import pymorphy2

from keyboard_menus_methods import *

morph = pymorphy2.MorphAnalyzer()

TOKEN = config('token', default='')
bot = telebot.TeleBot(TOKEN, parse_mode='HTML')

# –≤ 2:00 –ø–æ –ú–°–ö (–≤ 0:00 –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ï–≤—Ä–æ–ø—ã (GMT+1)) –ø—Ä–∏—Å—ã–ª–∞—é—Ç—Å—è –ø–∏—Å—å–º–∞ –æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
time_of_msg = time(23, 10)  # 23:10:00 –ø–æ –ú–°–ö, –≤—Ä–µ–º—è, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è

month_dict = {'01': "–Ø–Ω–≤–∞—Ä—å", '02': "–§–µ–≤—Ä–∞–ª—å", '03': "–ú–∞—Ä—Ç", '04': "–ê–ø—Ä–µ–ª—å", '05': "–ú–∞–π", '06': "–ò—é–Ω—å",
              '07': "–ò—é–ª—å", '08': "–ê–≤–≥—É—Å—Ç", '09': "–°–µ–Ω—Ç—è–±—Ä—å", '10': "–û–∫—Ç—è–±—Ä—å", '11': "–ù–æ—è–±—Ä—å", '12': "–î–µ–∫–∞–±—Ä—å"}

birthdays_and_names = {'09.01': ["–¢–æ–º–∞"],
                       '18.01': ["–î–∏–æ–Ω–∞"],
                       '24.01': ["–†–æ–∑–∞—Ä–∏—è"],
                       '14.02': ["–ë—ç–π –î–æ—É"],
                       '22.02': ["–°–∞–Ω–≥–æ–Ω–æ–º–∏—è –ö–æ–∫–æ–º–∏"],
                       '29.02': ["–ë–µ–Ω–Ω–µ—Ç"],
                       '03.03': ["–¶–∏ –¶–∏"],
                       '10.03': ["–®—ç–Ω—å –•—ç"],
                       '14.03': ["–î–∂–∏–Ω–Ω"],
                       '21.03': ["–ù–æ—ç–ª–ª—å"],
                       '26.03': ["–ö–∞–º–∏—Å–∞—Ç–æ –ê—è—Ç–æ"],
                       '04.04': ["–≠–ª–æ–π"],
                       '17.04': ["–°—è–æ"],
                       '20.04': ["–ï –õ–∞–Ω—å"],
                       '30.04': ["–î–∏–ª—é–∫"],
                       '18.05': ["–ì–æ—Ä–æ"],
                       '21.05': ["–Æ–Ω—å –¶–∑–∏–Ω—å"],
                       '27.05': ["–§–∏—à–ª—å"],
                       '01.06': ["–ò—Ç—Ç–æ", "–ü–∞–π–º–æ–Ω"],
                       '09.06': ["–õ–∏–∑–∞"],
                       '16.06': ["–í–µ–Ω—Ç–∏"],
                       '21.06': ["–Å–∏–º–∏—è"],
                       '26.06': ["–°—ë–≥—É–Ω –†–∞–π–¥—ç–Ω"],
                       '27.06': ["–Ø—ç –ú–∏–∫–æ"],
                       '05.07': ["–ë–∞—Ä–±–∞—Ä–∞"],
                       '14.07': ["–ö—É–¥–∑—ë –°–∞—Ä–∞"],
                       '15.07': ["–•—É –¢–∞–æ"],
                       '20.07': ["–¢–∞—Ä—Ç–∞–ª—å—è"],
                       '24.07': ["–°–∏–∫–∞–Ω–æ–∏–Ω –•—ç–π–¥–∑–æ"],
                       '27.07': ["–ö–ª–∏", "–ö—É–∫–∏ –°–∏–Ω–æ–±—É"],
                       '28.07': ["–Ø–Ω—å –§—ç–π"],
                       '10.08': ["–≠–º–±–µ—Ä"],
                       '26.08': ["–ù–∏–Ω –ì—É–∞–Ω"],
                       '31.08': ["–ú–æ–Ω–∞"],
                       '07.09': ["–ß—É–Ω –Æ–Ω—å"],
                       '09.09': ["–†—ç–π–∑–æ—Ä"],
                       '13.09': ["–ê–ª—å–±–µ–¥–æ"],
                       '28.09': ["–ö–∞–º–∏—Å–∞—Ç–æ –ê—è–∫–∞"],
                       '09.10': ["–°–∏–Ω –¶—é"],
                       '16.10': ["–°–∏–Ω—å –Ø–Ω—å"],
                       '19.10': ["–°–∞—é"],
                       '25.10': ["–≠–æ–ª–∞"],
                       '29.10': ["–ö–∞—ç–¥—ç—Ö–∞—Ä–∞ –ö–∞–¥–∑—É—Ö–∞"],
                       '02.11': ["–°—è–Ω –õ–∏–Ω"],
                       '20.11': ["–ö—ç –¶–∏–Ω"],
                       '26.11': ["–°–∞—Ö–∞—Ä–æ–∑–∞"],
                       '30.11': ["–ö—ç–π–∞"],
                       '02.12': ["–ì–∞–Ω—å –Æ–π"],
                       '31.12': ["–ß–∂—É–Ω –õ–∏"],
                       # '15.08': ["–ö–æ–ª–ª–µ–∏", "–¢–∏–≥–Ω–∞—Ä–∏"]  # —Å—Ç—Ä–æ—á–∫–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
                       }


def send_birthday_msg(name):
    bot.send_message("@birthdaysGenshin",
                     "<b>{name}</b> —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!".format(name=name))
    # –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –ø–∞–∫ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞–¥–æ –∑–∞–º–µ–Ω–∏—Ç—å send_message –Ω–∞ send_photo
    # bot.send_photo("@birthdaysGenshin", photo, caption='–∂–µ–ª–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç')


def send_hello_msg(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFj9pi-XwJ6DuPzfFzrNhgFAo74cNd6gACPw8AAnqS-EtUlG9v__OqzSkE',
                     reply_markup=main_menu())


def send_closest_bday(message):
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É –∏ –∑–∞–æ–¥–Ω–æ –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –æ—Ç—Ç—É–¥–∞ –≥–æ–¥ (–¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è)
    today = date.today()
    year_today = str(today.year)
    year_today = "." + year_today

    closest_bday_persons = []
    delta = -1
    date_of_closest_bday = ""
    # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞—Ç—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è (–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ–¥—è –∏—Ö –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã) –¥–æ —Ç–µ—Ö –ø–æ—Ä,
    # –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º –±–ª–∏–∂–∞–π—à—É—é –∫ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç–µ (–≤ –±—É–¥—É—â–µ–º, –Ω–µ –≤ –ø—Ä–æ—à–ª–æ–º)
    for key in birthdays_and_names.keys():
        bday = key + year_today
        bday = bday.replace('.', '/')
        if (key == '29.02') and (
                int(year_today[3:]) % 4 != 0):  # –µ—Å–ª–∏ –¥–∞—Ç–∞ - 29 —Ñ–µ—Ä–≤–∞–ª—è, –Ω–æ –≥–æ–¥ –Ω–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            continue
        else:
            bday_format = datetime.strptime(bday, "%d/%m/%Y")
            bday_format = bday_format.date()
        cur_delta = bday_format - today
        if cur_delta.days >= 0:  # –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞—Ö–æ–¥–∏–º –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É, –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª
            delta = cur_delta.days
            closest_bday_persons = birthdays_and_names[key]
            date_of_closest_bday = key
            break

    chars = ""  # –µ—Å–ª–∏ –∏–º–µ–Ω –±–æ–ª—å—à–µ —á–µ–º 1, –æ–Ω–∏ –±—É–¥—É—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∏–º—è1, –∏–º—è2 –∏ –∏–º—è3 (–∏–ª–∏ –∏–º—è1 –∏ –∏–º—è2)
    if len(closest_bday_persons) > 1:
        for person in closest_bday_persons:
            if closest_bday_persons.index(person) == len(closest_bday_persons) - 1:
                chars = chars[:-2]
                chars += " –∏ " + person
            else:
                chars += person + ", "
    else:
        chars = closest_bday_persons[0]

    when = ""
    if delta == 0:
        when = "–°–µ–≥–æ–¥–Ω—è"
    elif delta == 1:
        when = "–ó–∞–≤—Ç—Ä–∞"
    elif delta == 2:
        when = "–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞"
    else:
        if (11 <= delta <= 19) or (delta % 10 == 0) or (5 <= delta % 10 <= 9) \
                or (111 <= delta <= 119) or (211 <= delta <= 219) or (311 <= delta <= 319):
            when = f"–ß–µ—Ä–µ–∑ {delta} –¥–Ω–µ–π"
        elif 2 <= delta % 10 <= 4:
            when = f"–ß–µ—Ä–µ–∑ {delta} –¥–Ω—è"
        elif delta % 10 == 1:
            when = f"–ß–µ—Ä–µ–∑ {delta} –¥–µ–Ω—å"

    celebrate = ""
    if len(closest_bday_persons) > 1 and delta == 0:
        celebrate = "–ø—Ä–∞–∑–¥–Ω—É—é—Ç"
    elif len(closest_bday_persons) > 1 and delta > 0:
        celebrate = "–±—É–¥—É—Ç –ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å"
    elif len(closest_bday_persons) == 1 and delta == 0:
        celebrate = "–ø—Ä–∞–∑–¥–Ω—É–µ—Ç"
    elif len(closest_bday_persons) == 1 and delta > 0:
        celebrate = "–±—É–¥–µ—Ç –ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å"

    bot.send_message(message.chat.id, f"{when}, {date_of_closest_bday}, {chars} {celebrate} —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!",
                     reply_markup=main_menu())


def send_bday_closest_to_my_bday(message):
    bot.send_message(message.chat.id, '‚öô –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—á–µ–Ω—å –Ω–µ—Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞ üò¢Ô∏è', reply_markup=main_menu())


def send_bday_of_char(message):
    # –¥–ª—è —ç—Ç–æ–π —Ñ–∏—á–∏ –Ω–∞–¥–æ —Ç–æ–∂–µ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å–¥–µ–ª–∞—Ç—å (–∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—É–¥—É—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è)
    bot.send_message(message.chat.id, '–Ø –±—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é —Ä–∞—Å—Å–∫–∞–∑–∞–ª, –Ω–æ –ø–æ–∫–∞ –Ω–µ —É–º–µ—é üò¢Ô∏è', reply_markup=main_menu())


def send_that_month_bdays(message):
    current_month = str(date.today())[5:7]
    names_of_chars = "–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ:\n\n"
    text_of_msg = find_bdays_in_month(current_month, names_of_chars)
    bot.send_message(message.chat.id, text_of_msg, reply_markup=main_menu())


def send_bdays_of_selected_month(call, month):
    month_analyse = morph.parse(month)[0]
    month_loct = month_analyse.inflect({'loct'})  # –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π –ø–∞–¥–µ–∂

    digit_month = ''
    for key, value in month_dict.items():  # –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞ –≤ —á–∏—Å–ª–æ–≤–æ–π (—è–Ω–≤–∞—Ä—å -> 01)
        if month == value:
            digit_month = key
    names_of_chars = "–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ {month}:\n\n".format(month=month_loct.word)
    text_of_msg = find_bdays_in_month(digit_month, names_of_chars)
    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                          text=text_of_msg,
                          reply_markup=month_menu())


def find_bdays_in_month(required_month, names_of_chars):
    for key in birthdays_and_names.keys():
        month_of_bday = key[3:]
        if required_month == month_of_bday:
            names = birthdays_and_names[key]
            names_one_day = ""
            if len(names) > 1:
                for name in names:
                    names_one_day += name + ", "
            if names_one_day == "":
                names_of_chars += "{bday}: {name}\n".format(bday=key, name=names[0])
            else:
                names_one_day = names_one_day[:-2]
                names_of_chars += "{bday}: {name}\n".format(bday=key, name=names_one_day)
    return names_of_chars


def send_month_menu(message):
    bot.send_message(message.chat.id, text="–ö–∞–∫–æ–π –º–µ—Å—è—Ü –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=month_menu())


def check_time():
    """
    –ú–µ—Ç–æ–¥ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π.
    –ö–æ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –¥–∞—Ç–µ, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è.
    –ï—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ —Å–µ–≥–æ–¥–Ω—è –æ–Ω –µ—â–µ –Ω–µ –ø—É–±–ª–∏–∫–æ–≤–∞–ª –Ω–∏—á–µ–≥–æ,
    —Ç–æ–≥–¥–∞ –º–µ—Ç–æ–¥ –ø—É–±–ª–∏–∫—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ –∏ –¥–µ–ª–∞–µ—Ç –æ—Ç–º–µ—Ç–∫—É, —á—Ç–æ –æ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞–ª.
    –û—Ç–º–µ—Ç–∫–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
    """
    saved_date = ''
    is_msg_sent = False
    while True:
        today = date.today().strftime("%d.%m")
        if saved_date != today:
            saved_date = today
            is_msg_sent = False

        for birthday in birthdays_and_names.keys():
            if birthday == today:
                time_now = datetime.now().time()
                if time_now >= time_of_msg and not is_msg_sent:
                    names = birthdays_and_names[birthday]
                    for name in names:
                        send_birthday_msg(name)
                        timer.sleep(15)
                    is_msg_sent = True
        timer.sleep(600)  # —Å–æ–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç
