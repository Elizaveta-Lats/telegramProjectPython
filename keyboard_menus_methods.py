from telebot import types

birthdays_and_names = {'09.01': ["–¢–æ–º–∞"],
                       '18.01': ["–î–∏–æ–Ω–∞"],
                       '24.01': ["–†–æ–∑–∞—Ä–∏—è"],
                       '14.02': ["–ë—ç–π –î–æ—É"],
                       '22.02': ["–ö–æ–∫–æ–º–∏"],
                       '29.02': ["–ë–µ–Ω–Ω–µ—Ç"],
                       '03.03': ["–¶–∏ –¶–∏"],
                       '10.03': ["–®—ç–Ω—å –•—ç"],
                       '14.03': ["–î–∂–∏–Ω–Ω"],
                       '21.03': ["–ù–æ—ç–ª–ª—å"],
                       '26.03': ["–ê—è—Ç–æ"],
                       '04.04': ["–≠–ª–æ–π"],
                       '17.04': ["–°—è–æ"],
                       '20.04': ["–ï –õ–∞–Ω—å"],
                       '30.04': ["–î–∏–ª—é–∫"],
                       '03.05': ["–ö–∞–Ω–¥–∞–∫–∏—è"],
                       '08.05': ["–ö–æ–ª–ª–µ–∏"],
                       '18.05': ["–ì–æ—Ä–æ"],
                       '21.05': ["–Æ–Ω—å –¶–∑–∏–Ω—å"],
                       '27.05': ["–§–∏—à–ª—å"],
                       '01.06': ["–ò—Ç—Ç–æ", "–ü–∞–π–º–æ–Ω"],
                       '09.06': ["–õ–∏–∑–∞"],
                       '16.06': ["–í–µ–Ω—Ç–∏"],
                       '21.06': ["–Å–∏–º–∏—è"],
                       '23.06': ["–°–∞–π–Ω–æ"],
                       '26.06': ["–†–∞–π–¥—ç–Ω"],
                       '27.06': ["–Ø—ç –ú–∏–∫–æ"],
                       '05.07': ["–ë–∞—Ä–±–∞—Ä–∞"],
                       '14.07': ["–°–∞—Ä–∞"],
                       '15.07': ["–•—É –¢–∞–æ"],
                       '20.07': ["–¢–∞—Ä—Ç–∞–ª—å—è"],
                       '24.07': ["–•—ç–π–¥–∑–æ"],
                       '27.07': ["–ö–ª–∏", "–ö—É–∫–∏ –°–∏–Ω–æ–±—É"],
                       '28.07': ["–Ø–Ω—å –§—ç–π"],
                       '10.08': ["–≠–º–±–µ—Ä"],
                       '26.08': ["–ù–∏–Ω –ì—É–∞–Ω"],
                       '31.08': ["–ú–æ–Ω–∞"],
                       '07.09': ["–ß—É–Ω –Æ–Ω—å"],
                       '09.09': ["–†—ç–π–∑–æ—Ä"],
                       '13.09': ["–ê–ª—å–±–µ–¥–æ"],
                       '28.09': ["–ê—è–∫–∞"],
                       '09.10': ["–°–∏–Ω –¶—é"],
                       '16.10': ["–°–∏–Ω—å –Ø–Ω—å"],
                       '19.10': ["–°–∞—é"],
                       '25.10': ["–≠–æ–ª–∞"],
                       '29.10': ["–ö–∞–¥–∑—É—Ö–∞"],
                       '02.11': ["–°—è–Ω –õ–∏–Ω"],
                       '20.11': ["–ö—ç –¶–∏–Ω"],
                       '26.11': ["–°–∞—Ö–∞—Ä–æ–∑–∞"],
                       '30.11': ["–ö—ç–π–∞"],
                       '02.12': ["–ì–∞–Ω—å –Æ–π"],
                       '21.12': ["–î–æ—Ä–∏"],
                       '29.12': ["–¢–∏–≥–Ω–∞—Ä–∏"],
                       '31.12': ["–ß–∂—É–Ω –õ–∏"],
                       # '15.08': ["–ë–∞—Ä–∞–±–∞—à–∫–∞"]  # —Å—Ç—Ä–æ—á–∫–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
                       }

alphabet_name_list = ['–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Å', '–ò', '–ö', '–õ', '–ú',
                      '–ù', '–ü', '–†', '–°', '–¢', '–§', '–•', '–¶', '–ß', '–®', '–≠', '–Æ', '–Ø']

text_for_btn_hello = "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"
text_for_btn_closest_bday = "ü•≥ –ë–ª–∏–∂–∞–π—à–∏–π –î–†"
text_for_btn_that_month_bdays = "üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ"
text_for_btn_selected_month_bdays = "üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ"
text_for_btn_bday_closest_to_my_bday = "ü§î –£–∑–Ω–∞—Ç—å, —á–µ–π –î–† –±–ª–∏–∂–µ –≤—Å–µ–≥–æ –∫ –º–æ–µ–º—É"
text_for_btn_find_bday_of_char = "üîç –£–∑–Ω–∞—Ç—å –î–† –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"


def create_alphabet_list():
    """
    –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –∏–º–µ–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ
    –í –±—É–¥—É—â–µ–º —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞,
    —á—Ç–æ–±—ã, –µ—Å–ª–∏ —á—Ç–æ, –≤ –∞–ª—Ñ–∞–≤–∏—Ç –¥–æ–±–∞–≤–∏–ª–∞—Å—å –Ω–æ–≤–∞—è –±—É–∫–≤–∞
    """
    alphabet_list = []
    for names in birthdays_and_names.values():
        for name in names:
            first_letter = name[0]
            if first_letter not in alphabet_list:
                alphabet_list.append(first_letter)
    alphabet_list.sort()
    # —Ç–∞–Ω—Ü—ã —Å –±—É–±–Ω–æ–º, —á—Ç–æ–±—ã –±—É–∫–≤–∞ –Å –≤—Å—Ç–∞–ª–∞ –∫—É–¥–∞ –Ω–∞–¥–æ...
    yo = alphabet_list.pop(0)
    E_pos = alphabet_list.index('–ï')
    change_list = alphabet_list[:E_pos+1]
    change_list.append(yo)
    change_list.extend(alphabet_list[E_pos+1:])
    alphabet_list = change_list
    print(alphabet_list)


def main_menu():
    main_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    main_keyboard.row_width = 2
    btn_hello = types.KeyboardButton(text_for_btn_hello)
    btn_closest_bday = types.KeyboardButton(text_for_btn_closest_bday)
    btn_bdays_that_month = types.KeyboardButton(text_for_btn_that_month_bdays)
    btn_bdays_selected_month = types.KeyboardButton(text_for_btn_selected_month_bdays)
    btn_bday_closest_to_my_bday = types.KeyboardButton(text_for_btn_bday_closest_to_my_bday)
    btn_find_bday_of_char = types.KeyboardButton(text_for_btn_find_bday_of_char)
    main_keyboard.add(btn_hello, btn_closest_bday, btn_bdays_that_month, btn_bdays_selected_month,
                      btn_bday_closest_to_my_bday, btn_find_bday_of_char)
    return main_keyboard


def month_menu():
    month_keyboard = types.InlineKeyboardMarkup()
    month_keyboard.row_width = 3
    btn_jan = types.InlineKeyboardButton("–Ø–Ω–≤–∞—Ä—å", callback_data="jan")
    btn_feb = types.InlineKeyboardButton("–§–µ–≤—Ä–∞–ª—å", callback_data="feb")
    btn_mar = types.InlineKeyboardButton("–ú–∞—Ä—Ç", callback_data="mar")
    btn_apr = types.InlineKeyboardButton("–ê–ø—Ä–µ–ª—å", callback_data="apr")
    btn_may = types.InlineKeyboardButton("–ú–∞–π", callback_data="may")
    btn_jun = types.InlineKeyboardButton("–ò—é–Ω—å", callback_data="jun")
    btn_jul = types.InlineKeyboardButton("–ò—é–ª—å", callback_data="jul")
    btn_aug = types.InlineKeyboardButton("–ê–≤–≥—É—Å—Ç", callback_data="aug")
    btn_sep = types.InlineKeyboardButton("–°–µ–Ω—Ç—è–±—Ä—å", callback_data="sep")
    btn_oct = types.InlineKeyboardButton("–û–∫—Ç—è–±—Ä—å", callback_data="oct")
    btn_nov = types.InlineKeyboardButton("–ù–æ—è–±—Ä—å", callback_data="nov")
    btn_dec = types.InlineKeyboardButton("–î–µ–∫–∞–±—Ä—å", callback_data="dec")
    month_keyboard.add(btn_jan, btn_feb, btn_mar, btn_apr, btn_may, btn_jun, btn_jul, btn_aug, btn_sep,
                       btn_oct, btn_nov, btn_dec)
    return month_keyboard


def alphabet_menu():
    button_list = []
    row = []
    """
    –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –≤—ã—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ç–∞–±–ª–∏—Ü–µ–π, –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ø–∏—Å–∫–∞ —Å–ø–∏—Å–∫–æ–≤,
    –≥–¥–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–ø–∏—Å–∫–∏ - —Ä—è–¥ –∫–Ω–æ–ø–æ–∫. 
    –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª—è—Ç—å, —Ç–æ –∫–∞–∂–¥–∞—è –æ–∫–∞–∂–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ, 
    –∏–∑-–∑–∞ —á–µ–≥–æ –≤—Å—ë –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –≤ 1 –∫–æ–ª–æ–Ω–∫—É. –ü–æ—ç—Ç–æ–º—É –Ω–∞–¥–æ —Å–∞–º–∏–º —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
    """
    for letter in alphabet_name_list:
        if (alphabet_name_list.index(letter)+1) % 4 != 0:
            row.append(types.InlineKeyboardButton(letter, callback_data=letter))
        else:
            row.append(types.InlineKeyboardButton(letter, callback_data=letter))
            button_list.append(row)
            row = []
    for letter in alphabet_name_list:
        row.append(types.InlineKeyboardButton(letter, callback_data=letter))
    alphabet_keyboard = types.InlineKeyboardMarkup(button_list)
    return alphabet_keyboard


def char_menu(letter):
    """
    –ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç –±—É–∫–≤—É –∏–∑ –∞–ª—Ñ–∞–≤–∏—Ç–∞, –∞ –∑–∞—Ç–µ–º –≤ —Å–ª–æ–≤–∞—Ä–µ –∏—â–µ—Ç –≤—Å–µ –∏–º–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è –Ω–∞ —ç—Ç—É –±—É–∫–≤—É,
    –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ —Å–ø–∏—Å–æ–∫. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫
    """
    char_keyboard = types.InlineKeyboardMarkup()

    names_list = []
    for names in birthdays_and_names.values():
        for name in names:
            first_letter = name[0]
            if first_letter == letter:
                names_list.append(name)

    names_list.sort()

    for name in names_list:
        char_keyboard.add(types.InlineKeyboardButton(name, callback_data=name))

    char_keyboard.add(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back"))

    return char_keyboard


def btn_back_to_start():
    one_btn = types.InlineKeyboardMarkup()
    one_btn.add(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", callback_data="back"))
    return one_btn
